{"version":3,"sources":["App.js","index.js"],"names":["initialCounters","id","title","count","App","useState","counters","setCounters","setTitle","val","setVal","changeCount","value","newCounters","map","el","key","onClick","newCounter","resetCounter","filteredCounters","filter","deleteById","i","length","temp","upById","downById","type","onChange","event","target","placeholder","push","uuidv4","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAGMA,EAAkB,CACpB,CAACC,GAAI,EAAGC,MAAO,QAASC,MAAO,GAC/B,CAACF,GAAI,OAAQC,MAAO,OAAQC,MAAO,GACnC,CAACF,GAAI,EAAGC,MAAO,SAAUC,MAAO,GAChC,CAACF,GAAI,OAAQC,MAAO,SAAUC,MAAO,GACrC,CAACF,GAAI,OAAQC,MAAO,OAAQC,MAAO,IAoGxBC,MAjGf,WAAgB,IAAD,EAEqBC,mBAASL,GAF9B,mBAEJM,EAFI,KAEMC,EAFN,OAGeF,mBAAS,IAHxB,mBAGJH,EAHI,KAGGM,EAHH,OAIWH,mBAAS,IAJpB,mBAIJI,EAJI,KAICC,EAJD,KAMLC,EAAc,SAACV,EAAIW,GACrB,IAAMC,EAAcP,EAASQ,KAAI,SAAAC,GAC7B,OAAGA,EAAGd,KAAOA,GACTc,EAAGZ,OAASS,EACLG,GAEJA,KAEXR,EAAYM,IA0DhB,OACI,wCAEI,4BACKP,EAASQ,KAAK,SAAAC,GAAE,OACb,wBAAIC,IAAKD,EAAGd,IACPc,EAAGb,MACJ,4BAAQe,QAAS,kBAAMN,EAAYI,EAAGd,IAAK,KAA3C,KACCc,EAAGZ,MACJ,4BAAQc,QAAS,kBAAMN,EAAYI,EAAGd,GAAI,KAA1C,KACA,4BAAQgB,QAAS,kBAxChB,SAAChB,GAClB,IAAMiB,EAAaZ,EAASQ,KAAK,SAAAC,GAC7B,OAAGA,EAAGd,KAAOA,GACTc,EAAGZ,MAAQ,EACJY,GAEJA,KAEXR,EAAYW,GAgC2BC,CAAaJ,EAAGd,MAAvC,SACA,4BAAQgB,QAAS,kBA/BlB,SAAChB,GAChB,IAAMmB,EAAmBd,EAASe,QAAO,SAAAN,GAAE,OAAIA,EAAGd,KAAOA,KACzDM,EAAYa,GA6B2BE,CAAWP,EAAGd,MAArC,UACA,4BAAQgB,QAAS,kBAnEtB,SAAChB,GAEZ,IADA,IAAMY,EAAW,YAAOP,GAChBiB,EAAI,EAAGA,EAAEV,EAAYW,OAAQD,IACjC,GAAGV,EAAYU,GAAGtB,KAAOA,EAAI,CACzB,IAAIwB,EAAI,eAAOZ,EAAYU,IAC3BV,EAAYU,GAAZ,eAAqBV,EAAYU,EAAI,IACrCV,EAAYU,EAAE,GAAKE,EAG3BlB,EAAYM,GA0D2Ba,CAAOX,EAAGd,MAAjC,MACA,4BAAQgB,QAAS,kBAzDpB,SAAChB,GAEd,IADA,IAAMY,EAAW,YAAOP,GAChBiB,EAAIV,EAAYW,OAAO,EAAGD,GAAG,EAAGA,IACpC,GAAGV,EAAYU,GAAGtB,KAAOA,GAClBsB,IAAMV,EAAYW,OAAO,EAAG,CAC3B,IAAIC,EAAI,eAAOZ,EAAYU,IAC3BV,EAAYU,GAAZ,eAAqBV,EAAYU,EAAE,IACnCV,EAAYU,EAAE,GAAKE,EAI/BlB,EAAYM,GA8C2Bc,CAASZ,EAAGd,MAAnC,aAKZ,2BAAO2B,KAAK,OAAOC,SAzBP,SAACC,GACjBtB,EAASsB,EAAMC,OAAOnB,QAwBwBA,MAAOV,EAAO8B,YAAY,kBACpE,2BAAOJ,KAAK,SAASC,SAvBT,SAACC,GACjBpB,GAAQoB,EAAMC,OAAOnB,QAsB2BA,MAAOH,EAAKuB,YAAY,kBACpE,4BAAQf,QAnCG,WACf,IAAMC,EAAU,YAAOZ,GACvBY,EAAWe,KAAK,CAAChC,GAAIiC,eAAUhC,MAAOA,EAAOC,MAAOM,IACpDF,EAAYW,GACZV,EAAS,IACTE,EAAO,MA8BH,iBCjGZyB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.1180cf82.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { v4 as uuidv4} from 'uuid';\n\nconst initialCounters = [\n    {id: 1, title: 'Green', count: 1},\n    {id: '2sdf', title: 'Pink', count: 2},\n    {id: 3, title: 'Orange', count: 3},\n    {id: 'sdf3', title: 'Purple', count: 4},\n    {id: '2vbn', title: 'Blue', count: 5}\n];\n\nfunction App() {\n\n    const [counters, setCounters] = useState(initialCounters);\n    const [title, setTitle] = useState('');\n    const [val, setVal] = useState('');\n\n    const changeCount = (id, value) => {\n        const newCounters = counters.map(el => {\n            if(el.id === id) {\n                el.count += value;\n                return el;\n            }\n            return el;\n        })\n        setCounters(newCounters);\n    }\n\n    const upById = (id) => {\n        const newCounters = [...counters];\n        for(let i = 1; i<newCounters.length; i++){\n            if(newCounters[i].id === id) {\n                let temp = {...newCounters[i]};\n                newCounters[i] = {...newCounters[i - 1]};\n                newCounters[i-1] = temp;\n            }\n        }\n        setCounters(newCounters);\n    }\n    const downById = (id) => {\n        const newCounters = [...counters];\n        for(let i = newCounters.length-1; i>=0; i--) {\n            if(newCounters[i].id === id){\n                if(i!== (newCounters.length-1)){\n                    let temp = {...newCounters[i]};\n                    newCounters[i] = {...newCounters[i+1]};\n                    newCounters[i+1] = temp;\n                }\n            }\n        }\n        setCounters(newCounters);\n    }\n\n    const resetCounter = (id) => {\n        const newCounter = counters.map( el => {\n            if(el.id === id) {\n                el.count = 0;\n                return el;\n            }\n            return el;\n        })\n        setCounters(newCounter);\n    }\n    const deleteById = (id) =>  {\n        const filteredCounters = counters.filter(el => el.id !== id);\n        setCounters(filteredCounters);\n    }\n\n    const addCounter = () => {\n        const newCounter = [...counters];\n        newCounter.push({id: uuidv4(), title: title, count: val});\n        setCounters(newCounter);\n        setTitle('');\n        setVal('');\n    }\n\n    const changeTitle = (event) => {\n        setTitle(event.target.value);\n    }\n    const changeValue = (event) => {\n        setVal(+event.target.value);\n    }\n\n    return (\n        <div>\n            Counters\n            <ul>\n                {counters.map( el =>\n                    <li key={el.id}>\n                        {el.title}\n                        <button onClick={() => changeCount(el.id, -1)}>-</button>\n                        {el.count}\n                        <button onClick={() => changeCount(el.id, 1)}>+</button>\n                        <button onClick={() => resetCounter(el.id)}>Reset</button>\n                        <button onClick={() => deleteById(el.id)}>Delete</button>\n                        <button onClick={() => upById(el.id)}>Up</button>\n                        <button onClick={() => downById(el.id)}>Down</button>\n                    </li>\n                )}\n            </ul>\n\n            <input type=\"text\" onChange={changeTitle} value={title} placeholder='Counter title'/>\n            <input type=\"number\" onChange={changeValue} value={val} placeholder='Counter value'/>\n            <button onClick={addCounter}>Add counter</button>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}